<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.dmsdbj.integral.training.provider.dao.train.TrainingUserDao">

    <select id="queryProgramByLevelAndUser" parameterType="String"
            resultType="com.dmsdbj.integral.training.api.model.TrainingModel">
        select * from (
        select * from tit_training_program where level_id=#{levelId})
        as p
        LEFT JOIN(
        select * from tit_training_user
        where user_id=#{userlId} and is_delete=0)
        as u
        on  p.id=u.program_id
        where p.is_delete=0
        order by is_finished desc
    </select>

    <select id="selectExitByUserId" parameterType="String"
            resultType="com.dmsdbj.integral.training.entity.TrainingUserEntity">
        SELECT * FROM tit_training_user
        WHERE user_id=#{userlId} and is_delete=0
    </select>

    <update id="deleteAllByUserId" parameterType="String">
         UPDATE tit_training_user SET is_delete=1 WHERE  user_id=#{userlId}
    </update>

    <select id="findTrainingUser" resultType="com.dmsdbj.integral.training.entity.TrainingUserEntity">
        SELECT * FROM tit_training_user
        WHERE user_id=#{userId} and is_delete=0 and program_id=#{programId} order by create_time desc
    </select>

    <select id="queryLevelByUserId" parameterType="String" resultType="com.dmsdbj.integral.kernel.api.model.LevelModel">
        SELECT *,b.level_order as levelorderid,a.user_code as usercode,a.image_url as imageUrl1,a.user_name as userName,CAST(CONCAT(b.level_order,'çº§') AS CHAR) as levelorder,
        b.image_url as imageurl from tik_user a LEFT JOIN tik_training_level b on a.level_id=b.id  where a.id=#{userId}
    </select>

    <select id="findUser" resultType="java.util.HashMap">
        SELECT * FROM tik_user WHERE is_delete=0
    </select>
</mapper>
